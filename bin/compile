#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# Fail fast
set -e

indent() {
    sed -u 's/^/       /'
}

SCRIPT=`readlink -f $0`
BASE_DIR=`dirname $SCRIPT`/../
BUILD_DIR=$(cd "$1" && pwd)
CACHE_DIR=$2

echo "-----> BUILD_DIR=${BUILD_DIR}"
echo "-----> CACHE_DIR=${CACHE_DIR}"

SQUEAK_VERSION="4.4-12327"
VM_VERSION="4.10.2.2614"
BUILDPACK_SQUEAK_BASE_URL="http://ftp.squeak.org/"
[ -z ${SQUEAK_VERSION} ] && echo " !     Please set SQUEAK_VERSIONx" && exit 1
[ -z ${VM_VERSION} ] && echo " !     Please set VM_VERSIONx" && exit 1
[ -z ${BUILDPACK_SQUEAK_BASE_URL} ] && echo " !     Please set BUILDPACK_SQUEAK_BASE_URL" && exit 1;

echo "-----> Building application using Squeak ${SQUEAK_VERSION} on a ${VM_VERSION} VM"
echo "-----> Fetching artifacts from ${BUILDPACK_SQUEAK_BASE_URL}"

MAJOR_VERSION="$(echo ${SQUEAK_VERSION} | cut -d"-" -f1)"
# This is utterly retarded.
#SOURCES_VERSION="$(echo ${MAJOR_VERSION} | cut -d"." -f1)$(echo ${MAJOR_VERSION} | cut -d"." -f2)"
SOURCES_VERSION=41
IMAGE_URL=${BUILDPACK_SQUEAK_BASE_URL}/${MAJOR_VERSION}/Squeak${SQUEAK_VERSION}.tgz
SOURCES_URL=${BUILDPACK_SQUEAK_BASE_URL}/${MAJOR_VERSION}/SqueakV${SOURCES_VERSION}.sources.gz
#VM_URL=${BUILDPACK_SQUEAK_BASE_URL}/${MAJOR_VERSION}/unix-linux/coglinux.tgz
VM_URL="http://www.squeakvm.org/unix/release/Squeak-${VM_VERSION}-src.tar.gz"

mkdir -p ${CACHE_DIR}

# Set up the VM
if test -d ${CACHE_DIR}/${VM_VERSION}/
then
    echo "-----> Using Squeak VM ${VM_VERSION}"
else
    echo "-----> Bootstrapping cmake"
    CMAKE_VERSION=`cmake --version`
    if test "${CMAKE_VERSION}" != "cmake version 2.8.0"
    then
	CMAKE_VERSION="2.8.0"
	CMAKE_URL="http://www.cmake.org/files/v2.8/cmake-${CMAKE_VERSION}.tar.gz"
	CMAKE_FILE="cmake-${CMAKE_VERSION}.tar.gz"
	CMAKE_TAR_DIR="cmake-${CMAKE_VERSION}"
	TARGET=/app/.local
	echo "Compiling cmake v${CMAKE_VERSION}..." | indent
	curl -s ${CMAKE_URL} > ${CMAKE_FILE}
	tar zxf ${CMAKE_FILE}
	(cd ${CMAKE_TAR_DIR} && \
	    ./bootstrap --prefix=${TARGET} | indent && \
	    make | indent && \
	    make install | indent) && \
	    PATH=${TARGET}/bin:$PATH
    else
	echo "Using existing ${CMAKE_VERSION}" | indent
    fi
    echo "-----> Downloading Squeak VM ${VM_VERSION}"
    rm -rf ${CACHE_DIR}/vm*
    mkdir -p ${CACHE_DIR}/vm.${VM_VERSION}/
    # TODO: parameterise to handle both Cog64 and Interpreter VMs.
    (cd ${CACHE_DIR}/vm.${VM_VERSION}/ && \
	curl -O ${VM_URL} && \
	tar zxf Squeak-${VM_VERSION}-src.tar.gz && \
	mkdir Squeak-${VM_VERSION}-src/bld && \
	cd Squeak-${VM_VERSION}-src/bld && \
	../unix/cmake/configure --with-src=src64 --prefix=${BUILD_DIR}/squeak | indent && \
        make install | indent )
    VM=${BUILD_DIR}/squeak/bin/squeak
# Remnants of Cog downloading.
#      curl --silent --show-error --max-time 60 -L -O ${VM_URL} && \
#      tar zxf coglinux.tgz && \
#      rm coglinux.tgz)
#    VM=${CACHE_DIR}/vm.${VM_VERSION}/coglinux/bin/squeak
fi

# Set up the base image
if test -d ${CACHE_DIR}/${SQUEAK_VERSION}/
then
    echo "-----> Using Squeak ${SQUEAK_VERSION}"
else
    echo "-----> Downloading Squeak ${SQUEAK_VERSION}"
    rm -rf ${CACHE_DIR}/Squeak-${SQUEAK_VERSION}*
    mkdir -p ${CACHE_DIR}/Squeak-${SQUEAK_VERSION}
    (cd ${CACHE_DIR}/Squeak-${SQUEAK_VERSION} && \
      curl --silent --show-error --max-time 60 -L -O ${IMAGE_URL} && \
      curl --silent --show-error --max-time 60 -L -O ${SOURCES_URL} && \
      tar zxf Squeak${SQUEAK_VERSION}.tgz && \
      gunzip SqueakV${SOURCES_VERSION}.sources.gz && \
      rm Squeak${SQUEAK_VERSION}.tgz)
    cp -Rp ${CACHE_DIR}/Squeak-${SQUEAK_VERSION} ${BUILD_DIR}/squeak/image/
fi

# Install the application, unless (for testing purposes) we
# deliberately skip this step.
if test -z "${SKIP_INSTALLATION}"
then
    echo "-----> Installing application"
    REPO_TYPE="$(${BASE_DIR}/bin/detect ${BUILD_DIR})"
    INSTALLER="We couldn't identify the repository."
    case ${REPO_TYPE} in
	"Squeak (Filetree)")
	    INSTALLER="filetree-installer.st"
	    ;;
	*) echo " !     Unknown repository 'type ${REPO_TYPE}'" && exit 1;;
    esac
    export BUILD_DIR
    ${VM} ${BUILD_DIR}/squeak/image/Squeak${SQUEAK_VERSION}.image ${BASE_DIR}/installers/filetree-installer.st
else
    echo "-----> Skipping installation"
fi