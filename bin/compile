#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# Fail fast
set -e

SCRIPT=`readlink -f $0`
BASE_DIR=`dirname $SCRIPT`/../
BUILD_DIR=$(cd "$1" && pwd)
CACHE_DIR=$2

echo "-----> BUILD_DIR=${BUILD_DIR}"
echo "-----> CACHE_DIR=${CACHE_DIR}"

SQUEAK_VERSION="4.4-12327"
VM_VERSION="4.10.2.2614"
BUILDPACK_SQUEAK_BASE_URL="http://ftp.squeak.org/"
[ -z ${SQUEAK_VERSION} ] && echo " !     Please set SQUEAK_VERSIONx" && exit 1
[ -z ${VM_VERSION} ] && echo " !     Please set VM_VERSIONx" && exit 1
[ -z ${BUILDPACK_SQUEAK_BASE_URL} ] && echo " !     Please set BUILDPACK_SQUEAK_BASE_URL" && exit 1;

echo "-----> Building application using Squeak ${SQUEAK_VERSION} on a ${VM_VERSION} VM"
echo "-----> Fetching artifacts from ${BUILDPACK_SQUEAK_BASE_URL}"

MAJOR_VERSION="$(echo ${SQUEAK_VERSION} | cut -d"-" -f1)"
# This is utterly retarded.
#SOURCES_VERSION="$(echo ${MAJOR_VERSION} | cut -d"." -f1)$(echo ${MAJOR_VERSION} | cut -d"." -f2)"
SOURCES_VERSION=41
IMAGE_URL=${BUILDPACK_SQUEAK_BASE_URL}/${MAJOR_VERSION}/Squeak${SQUEAK_VERSION}.tgz
SOURCES_URL=${BUILDPACK_SQUEAK_BASE_URL}/${MAJOR_VERSION}/SqueakV${SOURCES_VERSION}.sources.gz
#VM_URL=${BUILDPACK_SQUEAK_BASE_URL}/${MAJOR_VERSION}/unix-linux/coglinux.tgz
VM_URL="http://www.squeakvm.org/unix/release/Squeak-4.10.2.2614-linux_x86_64.tar.gz"

mkdir -p ${CACHE_DIR}

# Set up the VM
if test -d ${CACHE_DIR}/${VM_VERSION}/
then
    echo "-----> Using ${VM_VERSION}"
else
    echo "-----> Downloading ${VM_VERSION}"
    rm -rf ${CACHE_DIR}/vm*
    mkdir -p ${CACHE_DIR}/vm.${VM_VERSION}/
    # TODO: parameterise to handle both Cog64 and Interpreter VMs.
    (cd ${CACHE_DIR}/vm.${VM_VERSION}/ && \
	curl -O ${VM_URL} && \
	cd Squeak-4.10.2.2614-linux_x86_64/platforms/unix && \
        make WIDTH=64)
    VM=${CACHE_DIR}/vm.${VM_VERSION}/bin/squeak
# Remnants of Cog downloading.
#      curl --silent --show-error --max-time 60 -L -O ${VM_URL} && \
#      tar zxf coglinux.tgz && \
#      rm coglinux.tgz)
#    VM=${CACHE_DIR}/vm.${VM_VERSION}/coglinux/bin/squeak
fi

# Set up the base image
if test -d ${CACHE_DIR}/${SQUEAK_VERSION}/
then
    echo "-----> Using Squeak ${SQUEAK_VERSION}"
else
    echo "-----> Downloading Squeak ${SQUEAK_VERSION}"
    rm -rf ${CACHE_DIR}/Squeak-${SQUEAK_VERSION}*
    mkdir -p ${CACHE_DIR}/Squeak-${SQUEAK_VERSION}
    (cd ${CACHE_DIR}/Squeak-${SQUEAK_VERSION} && \
      curl --silent --show-error --max-time 60 -L -O ${IMAGE_URL} && \
      curl --silent --show-error --max-time 60 -L -O ${SOURCES_URL} && \
      tar zxvf Squeak${SQUEAK_VERSION}.tgz && \
      gunzip SqueakV${SOURCES_VERSION}.sources.gz && \
      rm Squeak${SQUEAK_VERSION}.tgz)
fi

# Install the application, unless (for testing purposes) we
# deliberately skip this step.
if test -z "${SKIP_INSTALLATION}"
then
    echo "-----> Installing application"
    REPO_TYPE="$(${BASE_DIR}/bin/detect ${BUILD_DIR})"
    INSTALLER="We couldn't identify the repository."
    case ${REPO_TYPE} in
	"Squeak (Filetree)")
	    INSTALLER="filetree-installer.st"
	    ;;
	*) echo " !     Unknown repository 'type ${REPO_TYPE}'" && exit 1;;
    esac
    export BUILD_DIR
    ${VM} -vm-display-null -vm-sound-null ${CACHE_DIR}/Squeak-${SQUEAK_VERSION}/Squeak${SQUEAK_VERSION}.image ${BASE_DIR}/installers/filetree-installer.st
else
    echo "-----> Skipping installation"
fi